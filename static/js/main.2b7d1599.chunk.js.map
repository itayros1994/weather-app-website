{"version":3,"sources":["logo.svg","services/WeatherService.js","store/action/weather.action.js","services/IconsService.js","cmps/CurrentWeather.jsx","cmps/DayPreview.jsx","cmps/DailyForecast.jsx","services/locationService.js","pages/WeatherApp.jsx","cmps/SearchLocation.jsx","cmps/Header.jsx","cmps/Footer.jsx","routes.js","pages/Favorites.jsx","App.js","reportWebVitals.js","store/reducer/weather.reducer.js","store/store.js","index.js"],"names":["WeatherService","getLocations","location","Promise","resolve","autoComplete","getCurrentWeather","locationKey","currentWeather","getDailyForecast","dailyForecast","getKeyFromCords","geoposition","userLocation","getFavotrieWeather","loadCurrentWeather","dispatch","a","type","toggleSnackBar","loadDailyForecast","setCurrentLocation","currentLocation","errorMessege","iconsServise","getWeatherIcon","iconNumber","CurrentWeather","useSelector","state","weatherModule","celcius","useDispatch","length","className","class","src","WeatherIcon","alt","onClick","ev","setToFavorites","variant","Temperature","Metric","Value","Imperial","WeatherText","LocalizedName","Date","LocalObservationDateTime","toString","substring","DayPreview","dayForecast","day","Day","Icon","farnhiet","Math","round","celciusConverter","Maximum","IconPhrase","DailyForecast","map","locationService","getCurrentPosition","success","err","navigator","geolocation","Alert","React","forwardRef","props","ref","elevation","SearchLocation","useState","locations","setLocations","Autocomplete","disablePortal","id","onInputChange","_","startWith","then","catch","onChange","Key","options","getOptionLabel","renderInput","params","TextField","label","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","padding","height","pointerEvents","display","alignItems","justifyContent","Header","darkMode","favoritesLocations","setToggleDarkMode","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","to","IconButton","size","color","Badge","badgeContent","edge","Box","sx","flexGrow","AppBar","Toolbar","mr","Typography","noWrap","component","xs","sm","md","Switch","event","currentTarget","Footer","routes","path","snackBarOpen","handleClose","reason","loadWeatherData","coords","Object","keys","res","pos","latitude","longitude","useEffect","Snackbar","autoHideDuration","severity","onClickFavorite","EpochTime","Button","removeFromFavorites","console","log","App","createTheme","mode","main","background","default","ThemeProvider","CssBaseline","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","includes","filter","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b7d1599.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import autoComplete from '../data/autoCompleteRespons.json'\r\nimport currentWeather from '../data/currentWeather.json'\r\nimport dailyForecast from '../data/5DaysForecasts.json'\r\nimport userLocation from '../data/userLocation.json'\r\n// import axios from 'axios'\r\n\r\n// const API_KEY = '0NGDR7qbB3jAERFSSyArpMpe4Zq3TCQV'\r\n// const API_KEY = 'f1ihnGpONArGZtNAW0GN02tuAEBGMUG6'\r\n\r\n\r\nexport const WeatherService = {\r\n    getLocations,\r\n    getCurrentWeather,\r\n    getDailyForecast,\r\n    getKeyFromCords,\r\n    getFavotrieWeather\r\n}\r\n\r\nfunction getLocations(location) {\r\n    return Promise.resolve(autoComplete)\r\n    // return Promise.reject('chuppp')\r\n    // return axios\r\n    //     .get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${location}&language=en`)\r\n    //     .then(res => res.data)\r\n}\r\n\r\nfunction getCurrentWeather(locationKey) {\r\n    return Promise.resolve(currentWeather)\r\n    // return Promise.reject('chuppp23')\r\n\r\n    // return axios\r\n    //     .get(`http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}&language=en&details=false`)\r\n    //     .then(res => res.data)\r\n}\r\n\r\nfunction getDailyForecast(locationKey) {\r\n    return Promise.resolve(dailyForecast)\r\n    // return axios\r\n    //     .get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&language=en&details=true&metric=true\"`)\r\n    //     .then(res => res.data.DailyForecasts)\r\n}\r\n\r\n\r\nfunction getKeyFromCords(geoposition) {\r\nreturn Promise.resolve(userLocation)\r\n// return axios.get(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${geoposition.latitude}%2C${geoposition.longitude}&language=en`).then(res => res.data)\r\n\r\n}\r\n\r\nfunction getFavotrieWeather(locationKey){\r\n    // return axios\r\n    // .get(`http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}&language=en&details=false`)\r\n    // .then(res => res.data)\r\n}\r\n\r\n","import { WeatherService } from \"../../services/WeatherService\"\r\n\r\n\r\nexport function loadCurrentWeather(locationKey) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const currentWeather = await WeatherService.getCurrentWeather(locationKey)\r\n      const action = {\r\n        type: 'SET_CURRENT_WEATHER',\r\n        currentWeather\r\n      }\r\n      dispatch(action)\r\n    } catch (err) {\r\n      dispatch(toggleSnackBar(err));\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadDailyForecast(locationKey) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const dailyForecast = await WeatherService.getDailyForecast(locationKey)\r\n      const action = {\r\n        type: 'SET_DAILY_FORECAST',\r\n        dailyForecast\r\n      }\r\n      dispatch(action)\r\n    } catch (err) {\r\n      dispatch(toggleSnackBar(err));\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCurrentLocation(currentLocation) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_CURRENT_LOCATION',\r\n        currentLocation\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\nexport function removeFromFavorites(locationKey) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'REMOVE_LOCATION_FAVORITE',\r\n        locationKey\r\n      }\r\n      dispatch(action) \r\n  }\r\n}\r\n\r\nexport function setToFavorites(currentLocation,currentWeather) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_LOCATION_FAVORITE',\r\n        currentLocation,\r\n        currentWeather \r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\nexport function toggleDarkMode() {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_DARK_MODE',\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\nexport function toggleTemperature() {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_TEMPERATURE',\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function toggleSnackBar(errorMessege) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_SNACK_BAR',\r\n        errorMessege}\r\n      dispatch(action)\r\n      \r\n  }\r\n}\r\n\r\n\r\n\r\n","export const iconsServise = {\r\n    getWeatherIcon,\r\n}\r\n\r\nfunction getWeatherIcon(iconNumber) {\r\n    if(iconNumber < 10) {\r\n        return `https://developer.accuweather.com/sites/default/files/0${iconNumber}-s.png`;\r\n      } else {\r\n        return `https://developer.accuweather.com/sites/default/files/${iconNumber}-s.png`;\r\n      }\r\n}\r\n\r\n// function getWeatherMainImg(iconNumber) {\r\n\r\n//   if(iconNumber < 5) {\r\n// return 'https://images.all-free-download.com/images/graphiclarge/natural_landscape_drawing_mountain_lake_trees_decoration_6833988.jpg'\r\n//   }\r\n\r\n//   if(iconNumber > 5 && iconNumber < 10) {\r\n//     return 'https://images.all-free-download.com/images/graphiclarge/wild_life_drawing_landscape_animal_silhouette_design_6834956.jpg'\r\n//   }\r\n\r\n// }\r\n","import { Card } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setToFavorites } from \"../store/action/weather.action\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\nexport function CurrentWeather() {\r\n  const { currentLocation, celcius, currentWeather } = useSelector((state) => state.weatherModule);\r\n\r\n  const dispatch = useDispatch();\r\n  const onSetToFavorite = (ev) => {\r\n    dispatch(setToFavorites(currentLocation, currentWeather));\r\n  };\r\n\r\n  if (!currentWeather.length)\r\n    return (\r\n      <div>\r\n        <Loader></Loader>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"current-weather-container\">\r\n      <article class=\"widget2\">\r\n        <div className=\"current-top-container\">\r\n          <div class=\"weatherIcon2\">\r\n            <img \r\n              src={iconsServise.getWeatherIcon(currentWeather[0].WeatherIcon)}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <FavoriteBorderIcon\r\n            onClick={onSetToFavorite}\r\n            className=\"favorite-btn\"\r\n            variant=\"contained\"\r\n          >\r\n            Add To Favorite\r\n          </FavoriteBorderIcon>\r\n        </div>\r\n        <div class=\"current-buttom-container\">\r\n        <div class=\"weatherInfo2\">\r\n          <div class=\"temperature2\">\r\n            {celcius ? <span>{currentWeather[0].Temperature.Metric.Value}c&deg;</span> : <span>{currentWeather[0].Temperature.Imperial.Value}f&deg;</span>}\r\n          </div> \r\n          <div class=\"description2\">\r\n            <div class=\"weatherCondition2\">{currentWeather[0].WeatherText}</div>\r\n            <div class=\"place2\">{currentLocation.LocalizedName}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"date2\">{new Date(currentWeather[0].LocalObservationDateTime).toString().substring(0, 3)}</div>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Card } from \"@mui/material\";\r\n// import React from \"react\";\r\n// import Loader from \"react-loader-spinner\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { setToFavorites } from \"../store/action/weather.action\";\r\n// import { iconsServise } from \"../services/IconsService\";\r\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\n\r\n// export function CurrentWeather({ currentWeather }) {\r\n//   const { currentLocation ,celcius } = useSelector((state) => state.weatherModule);\r\n\r\n//   const dispatch = useDispatch();\r\n//   const onSetToFavorite = (ev) => {\r\n//     dispatch(setToFavorites(currentLocation));\r\n//   };\r\n\r\n//   if (!currentWeather.length)\r\n//     return (\r\n//       <div>\r\n//         <Loader></Loader>\r\n//       </div>\r\n//     );\r\n//   return (\r\n//     <div className=\"current-weather-container\">\r\n//           </FavoriteBorderIcon>\r\n//         </div>\r\n//         <div class=\"current-buttom-container\">\r\n//         <div class=\"weatherInfo2\">\r\n//           <div class=\"temperature2\">\r\n//             {celcius ? <span>{currentWeather[0].Temperature.Metric.Value}&deg;c</span> : <span>{currentWeather[0].Temperature.Imperial.Value}&deg;f</span>}\r\n//           </div>\r\n//           <div class=\"description2\">\r\n//             <div class=\"weatherCondition2\">{currentWeather[0].WeatherText}</div>\r\n//             <div class=\"place2\">{currentLocation.LocalizedName}</div>\r\n//           </div>\r\n//         </div>\r\n//         <div class=\"date2\">{new Date(currentWeather[0].LocalObservationDateTime).toString().substring(0, 3)}</div>\r\n//         </div>\r\n//       </article>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n ","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function DayPreview({ dayForecast }) {\r\n  const { celcius } = useSelector((state) => state.weatherModule);\r\n\r\n  const celciusConverter = (farnhiet) => {\r\n    let celcius = (5 * (farnhiet - 32)) / 9;\r\n    return Math.round(celcius);\r\n  };\r\n  let day = new Date(dayForecast.Date).toString();\r\n  return (\r\n    <div className=\"daily-forecast-container\">\r\n      <article class=\"widget\">\r\n        <div class=\"weatherIcon\">\r\n          <img src={iconsServise.getWeatherIcon(dayForecast.Day.Icon)} alt=\"\" />\r\n        </div>\r\n        <div class=\"weatherInfo\">\r\n          <div class=\"temperature\">\r\n            {\" \"}\r\n            {celcius ? (\r\n              <span>\r\n                {celciusConverter(dayForecast.Temperature.Maximum.Value)}&deg;C\r\n              </span>\r\n            ) : (\r\n              <span>{dayForecast.Temperature.Maximum.Value}&deg;f</span>\r\n            )}\r\n          </div>\r\n          <div class=\"description\">\r\n            <div class=\"weatherCondition\">{dayForecast.Day.IconPhrase}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"date\">{day.substring(0, 3)}</div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DayPreview } from \"./DayPreview\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport function DailyForecast({ dailyForecast }) {\r\n  if (!dailyForecast.length) return <div><Loader></Loader></div>;\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"daily-list\">\r\n        {dailyForecast.map((dayForecast) => {\r\n          return <DayPreview dayForecast={dayForecast} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const locationService = {\r\n    getCurrentPosition\r\n}\r\n\r\nfunction getCurrentPosition(success, err) {\r\n    navigator.geolocation.getCurrentPosition(success, err);\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CurrentWeather } from \"../cmps/CurrentWeather\";\r\nimport { Hero } from \"../cmps/Hero\";\r\nimport { DailyForecast } from \"../cmps/DailyForecast\";\r\nimport { WeatherService } from \"../services/WeatherService\";\r\nimport { locationService } from \"../services/locationService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport {\r\n  loadCurrentWeather,\r\n  loadDailyForecast,\r\n  setCurrentLocation,\r\n  toggleSnackBar,\r\n  setUserLocation,\r\n} from \"../store/action/weather.action\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport function WeatherApp() {\r\n  const {\r\n    currentWeather,\r\n    dailyForecast,\r\n    snackBarOpen,\r\n    errorMessege,\r\n    currentLocation,\r\n  } = useSelector((state) => state.weatherModule);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(toggleSnackBar());\r\n  };\r\n  \r\n  const loadWeatherData =(coords) => {\r\n    if (Object.keys(currentLocation).length === 0) {\r\n      WeatherService.getKeyFromCords(coords)\r\n        .then((res) => {\r\n          dispatch(loadCurrentWeather(res.Key));\r\n          dispatch(loadDailyForecast(res.Key));\r\n          dispatch(setCurrentLocation(res));\r\n        })\r\n        .catch((err) => dispatch(toggleSnackBar(err)));\r\n    }\r\n  }\r\n  const success = (pos) => {\r\n    loadWeatherData(pos.coords)\r\n  };\r\n\r\n  const err = (err) => {\r\n    let telAviv = {\r\n      latitude: \"32.0853\",\r\n      longitude: \"34.7818\",\r\n    };\r\n    loadWeatherData(telAviv)\r\n  };\r\n\r\n  useEffect(() => {\r\n    locationService.getCurrentPosition(success, err);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-container\">\r\n      {/* <Hero /> */}\r\n        <CurrentWeather currentWeather={currentWeather}></CurrentWeather>\r\n      </div>\r\n      <DailyForecast dailyForecast={dailyForecast}></DailyForecast>\r\n      <div>\r\n        <Snackbar\r\n          open={snackBarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n            {errorMessege}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Autocomplete, colors } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { WeatherService } from \"../services/WeatherService\";\r\nimport {\r\n  loadCurrentWeather,\r\n  loadDailyForecast,\r\n  setCurrentLocation,\r\n  toggleSnackBar,\r\n} from \"../store/action/weather.action\";\r\n\r\nexport function SearchLocation() {\r\n  const dispatch = useDispatch();\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const onSetCity = (_, startWith) => {\r\n    WeatherService.getLocations(startWith)\r\n      .then((locations) => setLocations(locations || []))\r\n      .catch((err) => dispatch(toggleSnackBar(err)));\r\n  };\r\n\r\n  const onSetKey = (_, location) => {\r\n    if (!location) return;\r\n    dispatch(loadCurrentWeather(location.Key));\r\n    dispatch(loadDailyForecast(location.Key));\r\n    dispatch(setCurrentLocation(location));\r\n  };\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <Autocomplete\r\n        disablePortal\r\n        id=\"combo-box-demo\"\r\n        onInputChange={onSetCity}\r\n        onChange={onSetKey}\r\n        options={locations}\r\n        getOptionLabel={(location) => location.LocalizedName}\r\n        renderInput={(params) => (\r\n          <TextField variant=\"outlined\" {...params} label=\"Search City...\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport {\r\n  toggleDarkMode,\r\n  toggleTemperature,\r\n} from \"../store/action/weather.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport { SearchLocation } from \"./SearchLocation\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nexport function Header() {\r\n  const dispatch = useDispatch();\r\n  const { darkMode, favoritesLocations, currentLocation ,celcius } = useSelector(\r\n    (state) => state.weatherModule\r\n  );\r\n\r\n  const setToggleDarkMode = () => {\r\n    dispatch(toggleDarkMode());\r\n  };\r\n\r\n  const setToggleTemperature = () => {\r\n    dispatch(toggleTemperature());\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link className=\"link-mobile\" to=\"/favorites\">\r\n        <MenuItem>\r\n          <IconButton\r\n            size=\"large\"\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n          >\r\n            <Badge badgeContent={favoritesLocations.length} color=\"error\">\r\n              <FavoriteBorderIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Favorites</p>\r\n        </MenuItem>\r\n      </Link>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          aria-haspopup=\"true\"\r\n          onClick={setToggleDarkMode}\r\n          color=\"inherit\"\r\n        >\r\n          {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\r\n        </IconButton>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <Link className=\"link\" to=\"/\">\r\n                <HomeIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n            >\r\n              Herolo WeatherApp\r\n            </Typography>\r\n            <Search>\r\n              <SearchLocation />\r\n            </Search>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n              >\r\n                {currentLocation.LocalizedName}\r\n              </Typography>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                  <Switch color=\"default\" onClick={setToggleTemperature}></Switch>\r\n                  <span className=\"temperature-sign\">{celcius ? 'C' : 'F'}</span>\r\n                \r\n              </IconButton>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                onClick={setToggleDarkMode}\r\n                color=\"inherit\"\r\n              >\r\n                {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\r\n              </IconButton>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={favoritesLocations.length} color=\"error\">\r\n                  <Link className=\"link\" to=\"/favorites\">\r\n                    <FavoriteBorderIcon />\r\n                  </Link>\r\n                </Badge>\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMobileMenu}\r\n        {renderMenu}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"coffee-rights\">© 2021 Itay Rosental</div>\r\n        </div>\r\n    )\r\n}\r\n","import { WeatherApp } from \"./pages/WeatherApp\"\r\nimport { Favorites } from \"./pages/Favorites\"\r\n\r\nexport const routes = [\r\n    \r\n    {\r\n        path: '/',\r\n        component: WeatherApp\r\n    }, \r\n    {\r\n        path: '/favorites',\r\n        component: Favorites\r\n        \r\n    },  \r\n\r\n]","import React from \"react\";\r\nimport { Button, Card } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromFavorites, loadCurrentWeather, loadDailyForecast , setCurrentLocation} from \"../store/action/weather.action\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Favorites() {\r\n  const dispatch = useDispatch();\r\n  const { favoritesLocations, currentWeather, celcius } = useSelector(\r\n    (state) => state.weatherModule\r\n  );\r\n  \r\n  const locations = favoritesLocations;\r\n  const onRemoveFavorites = (locationKey) => {\r\n    dispatch(removeFromFavorites(locationKey));\r\n    console.log(currentWeather);\r\n  };\r\n\r\n  // if(currentWeather.length === 0) return\r\n  // let day = new Date(currentWeather[0].EpochTime).toString().substring(0,3);\r\n\r\n  const onClickFavorite = (location) => {\r\n    dispatch(loadCurrentWeather(location.Key));\r\n      dispatch(loadDailyForecast(location.Key));\r\n      dispatch(setCurrentLocation(location));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"favorties-header\">Favorites Cities!</h1>\r\n      <div className=\"favorites-container\">\r\n      <div className={favoritesLocations.length ? 'yes-favorites' : 'no-favorites'}>No Favorites Yet!</div>\r\n        {locations.map((location) => (\r\n      <Link to=\"/\" onClick={()=> onClickFavorite(location)} >\r\n          <article class=\"widget\">\r\n          <div class=\"weatherIcon\"><img\r\n              src={iconsServise.getWeatherIcon(currentWeather[0].WeatherIcon)}\r\n              alt=\"\"\r\n            /></div>\r\n          <div class=\"weatherInfo\">\r\n            <div class=\"temperature\">{celcius ? <span>{currentWeather[0].Temperature.Metric.Value}&deg;</span> :  <span>{currentWeather[0].Temperature.Imperial.Value}&deg;</span>}</div>\r\n            <div class=\"description\">    \r\n              <div class=\"weatherCondition\">{currentWeather[0].WeatherText}</div>    \r\n              <div class=\"place\">{location.LocalizedName.substring(0, 8)}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"date\">{new Date(currentWeather[0].EpochTime).toString().substring(0,3)}</div>\r\n              <Button className=\"remove-favorite\"\r\n              onClick={() => onRemoveFavorites(location.Key)}\r\n              color=\"info\"\r\n              variant=\"contained\"\r\n            >\r\n              Remove\r\n            </Button>\r\n        </article> \r\n        </Link> \r\n        ))}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n{/* <div className=\"favorites-list\">\r\n            <Link onClick={()=> onClickFavorite(location.Key)} to={`/main/${location.Key}`}>\r\n            <div>{location.LocalizedName.substring(0, 8)}</div><br/>\r\n            <img\r\n              src={iconsServise.getWeatherIcon(currentWeather[0].WeatherIcon)}\r\n              alt=\"\"\r\n            />\r\n              </Link>\r\n            <Button\r\n              onClick={() => onRemoveFavorites(location.Key)}\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div> */}","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport './assets/style/main.scss'\nimport { WeatherApp } from './pages/WeatherApp';\nimport {Header} from './cmps/Header'\nimport { Footer } from './cmps/Footer';\nimport { routes } from './routes.js';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useSelector } from \"react-redux\";\nimport { CssBaseline } from '@mui/material';\n\nfunction App() {\n  const { darkMode } = useSelector(\n    (state) => state.weatherModule\n  );\n\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      ...(darkMode) ? {main : '#ff0044', background : {default : '#132F4C' }} : {main : '#ff0044', background : {default : '#cfd8dc' }}\n\n    },\n  })\n\n  return (\n    <div  className=\"App\">\n      <Router>\n        <ThemeProvider theme={theme}>\n          <CssBaseline>\n          <Header/>\n          <Switch >\n            <div className=\"main-container\"> {routes.map(route => {\n              return <Route key={route.path} exact component={route.component} path={route.path} />\n            })}</div>\n          </Switch>\n          <Footer />\n          </CssBaseline>\n        </ThemeProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    currentWeather: {},\r\n    dailyForecast: {},\r\n    currentLocation: {},\r\n    favoritesLocations: [],\r\n    darkMode: false,\r\n    celcius : true,\r\n    snackBarOpen : false,\r\n    errorMessege : ''\r\n}\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_WEATHER':\r\n            return { ...state, currentWeather: action.currentWeather }\r\n        case 'SET_DAILY_FORECAST':\r\n            return { ...state, dailyForecast: action.dailyForecast }\r\n        case 'SET_LOCATION_FAVORITE':\r\n            if(state.favoritesLocations.includes(action.currentLocation)) return state \r\n            return { ...state, favoritesLocations: [...state.favoritesLocations, action.currentLocation] }\r\n        case 'SET_CURRENT_LOCATION':\r\n            return { ...state, currentLocation: action.currentLocation }\r\n        case 'TOGGLE_DARK_MODE':\r\n            return { ...state, darkMode: !state.darkMode }\r\n        case 'TOGGLE_TEMPERATURE':\r\n            return { ...state, celcius: !state.celcius }\r\n        case 'TOGGLE_SNACK_BAR':\r\n            return { ...state, snackBarOpen: !state.snackBarOpen, errorMessege: action.errorMessege  }\r\n        case 'REMOVE_LOCATION_FAVORITE':\r\n            return { ...state, favoritesLocations: state.favoritesLocations.filter(location => location.Key !== action.locationKey) }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { weatherReducer } from './reducer/weather.reducer';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    weatherModule : weatherReducer,\r\n})\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}