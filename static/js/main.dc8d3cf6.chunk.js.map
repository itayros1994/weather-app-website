{"version":3,"sources":["logo.svg","services/WeatherService.js","store/action/weather.action.js","services/IconsService.js","cmps/CurrentWeather.jsx","cmps/DayPreview.jsx","cmps/DailyForecast.jsx","services/locationService.js","pages/WeatherApp.jsx","cmps/SearchLocation.jsx","cmps/Header.jsx","cmps/Footer.jsx","routes.js","pages/Favorites.jsx","App.js","reportWebVitals.js","store/reducer/weather.reducer.js","store/store.js","index.js"],"names":["API_KEY","WeatherService","getLocations","location","axios","get","then","res","data","getCurrentWeather","locationKey","getDailyForecast","DailyForecasts","getKeyFromCords","geoposition","latitude","longitude","loadCurrentWeather","dispatch","a","currentWeather","type","toggleSnackBar","loadDailyForecast","dailyForecast","setCurrentLocation","currentLocation","errorMessege","iconsServise","getWeatherIcon","iconNumber","CurrentWeather","useSelector","state","weatherModule","celcius","useDispatch","onSetToFavorite","favorite","err","setToFavorites","length","className","class","src","WeatherIcon","alt","onClick","variant","Temperature","Metric","Value","Imperial","WeatherText","LocalizedName","Date","LocalObservationDateTime","toString","substring","DayPreview","dayForecast","day","Day","Icon","farnhiet","Math","round","celciusConverter","Maximum","IconPhrase","DailyForecast","map","locationService","getCurrentPosition","success","navigator","geolocation","Alert","React","forwardRef","props","ref","elevation","SearchLocation","useState","locations","setLocations","Autocomplete","disablePortal","id","onInputChange","_","startWith","catch","onChange","Key","options","getOptionLabel","renderInput","params","TextField","label","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","Header","darkMode","favoritesLocations","setToggleDarkMode","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","to","IconButton","size","color","Badge","badgeContent","edge","Box","sx","flexGrow","AppBar","Toolbar","mr","Typography","noWrap","component","display","xs","sm","md","Switch","event","currentTarget","Footer","routes","path","snackBarOpen","useEffect","handleClose","reason","loadWeatherData","coords","Object","keys","pos","Snackbar","autoHideDuration","severity","console","log","onClickFavorite","EpochTime","Button","removeFromFavorites","App","createTheme","mode","main","background","default","ThemeProvider","CssBaseline","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","findIndex","filter","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc8d3cf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import autoComplete from '../data/autoCompleteRespons.json'\r\nimport currentWeather from '../data/currentWeather.json'\r\nimport dailyForecast from '../data/5DaysForecasts.json'\r\nimport userLocation from '../data/userLocation.json'\r\nimport axios from 'axios'\r\n\r\n// const API_KEY = '0NGDR7qbB3jAERFSSyArpMpe4Zq3TCQV'\r\n// const API_KEY = 'EDoXcIUtqNmGbRlLbqNReSUUtgmnUHt0'\r\nconst API_KEY = 'nNM3vUZ3Aw5898bzM664AzVUAqs7GUla'\r\nexport const WeatherService = {\r\n    getLocations,\r\n    getCurrentWeather,\r\n    getDailyForecast,\r\n    getKeyFromCords,\r\n}\r\n\r\nfunction getLocations(location) {\r\n    // return Promise.resolve(autoComplete)\r\n    // return Promise.reject('chuppp')\r\n    return axios\r\n        .get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${location}&language=en`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction getCurrentWeather(locationKey) {\r\n    // return Promise.resolve(currentWeather)\r\n    // return Promise.reject('chuppp23')\r\n\r\n    return axios\r\n        .get(`https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${API_KEY}&language=en&details=false`)\r\n        .then(res => res.data)\r\n}\r\n\r\nfunction getDailyForecast(locationKey) {\r\n    // return Promise.resolve(dailyForecast)\r\n    return axios\r\n        .get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${API_KEY}&language=en&details=true&metric=true\"`)\r\n        .then(res => res.data.DailyForecasts)\r\n}\r\n\r\n\r\nfunction getKeyFromCords(geoposition) {\r\n    // return Promise.resolve(userLocation)\r\n    return axios.get(`https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${geoposition.latitude}%2C${geoposition.longitude}&language=en`).then(res => res.data)\r\n\r\n}\r\n","import { WeatherService } from \"../../services/WeatherService\"\r\n\r\n\r\nexport function loadCurrentWeather(locationKey) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const currentWeather = await WeatherService.getCurrentWeather(locationKey)\r\n      const action = {\r\n        type: 'SET_CURRENT_WEATHER',\r\n        currentWeather\r\n      }\r\n      dispatch(action)\r\n    } catch (err) {\r\n      dispatch(toggleSnackBar(err));\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadDailyForecast(locationKey) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const dailyForecast = await WeatherService.getDailyForecast(locationKey)\r\n      const action = {\r\n        type: 'SET_DAILY_FORECAST',\r\n        dailyForecast\r\n      }\r\n      dispatch(action)\r\n    } catch (err) {\r\n      dispatch(toggleSnackBar(err));\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function setCurrentLocation(currentLocation) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'SET_CURRENT_LOCATION',\r\n        currentLocation\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\nexport function removeFromFavorites(locationKey) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'REMOVE_LOCATION_FAVORITE',\r\n        locationKey\r\n      }\r\n      dispatch(action) \r\n  }\r\n}\r\n\r\nexport function setToFavorites(favorite) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const action = {\r\n        type: 'SET_LOCATION_FAVORITE',\r\n        favorite\r\n      }\r\n      dispatch(action)\r\n    }\r\n      catch (err) {\r\n        dispatch(toggleSnackBar(err));\r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport function toggleDarkMode() {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_DARK_MODE',\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\nexport function toggleTemperature() {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_TEMPERATURE',\r\n      }\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\n\r\nexport function toggleSnackBar(errorMessege) {\r\n  return (dispatch) => {\r\n      const action = {\r\n        type: 'TOGGLE_SNACK_BAR',\r\n        errorMessege}\r\n      dispatch(action)\r\n  }\r\n}\r\n\r\n\r\n\r\n","export const iconsServise = {\r\n    getWeatherIcon,\r\n}\r\n\r\nfunction getWeatherIcon(iconNumber) {\r\n    if(iconNumber < 10) {\r\n        return `https://developer.accuweather.com/sites/default/files/0${iconNumber}-s.png`;\r\n      } else {\r\n        return `https://developer.accuweather.com/sites/default/files/${iconNumber}-s.png`;\r\n      }\r\n}\r\n\r\n","import { Card } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setToFavorites } from \"../store/action/weather.action\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\n\r\nexport function CurrentWeather() {\r\n  const { currentLocation, celcius, currentWeather } = useSelector(\r\n    (state) => state.weatherModule\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const onSetToFavorite = (favorite) => {\r\n    dispatch(setToFavorites(favorite));\r\n  };\r\n\r\n  if (!currentWeather.length)\r\n    return (\r\n      <div>\r\n        <Loader></Loader>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"current-weather-container\">\r\n      <article class=\"widget2\">\r\n        <div className=\"current-top-container\">\r\n          <div class=\"weatherIcon2\">\r\n            <img\r\n              src={iconsServise.getWeatherIcon(currentWeather[0].WeatherIcon)}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <FavoriteBorderIcon\r\n            onClick={() => onSetToFavorite({\r\n              currentWeather: currentWeather,\r\n              currentLocation: currentLocation,\r\n            })}\r\n            className=\"favorite-btn\"\r\n            variant=\"contained\"\r\n          >\r\n            Add To Favorite\r\n          </FavoriteBorderIcon>\r\n        </div>\r\n        <div class=\"current-buttom-container\">\r\n          <div class=\"weatherInfo2\">\r\n            <div class=\"temperature2\">\r\n              {celcius ? (\r\n                <span>{currentWeather[0].Temperature.Metric.Value}c&deg;</span>\r\n              ) : (\r\n                <span>\r\n                  {currentWeather[0].Temperature.Imperial.Value}f&deg;\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div class=\"description2\">\r\n              <div class=\"weatherCondition2\">\r\n                {currentWeather[0].WeatherText}\r\n              </div>\r\n              <div class=\"place2\">{currentLocation.LocalizedName}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"date2\">\r\n            {new Date(currentWeather[0].LocalObservationDateTime)\r\n              .toString()\r\n              .substring(0, 3)}\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function DayPreview({ dayForecast }) {\r\n  const { celcius } = useSelector((state) => state.weatherModule);\r\n\r\n  const celciusConverter = (farnhiet) => {\r\n    let celcius = (5 * (farnhiet - 32)) / 9;\r\n    return Math.round(celcius);\r\n  };\r\n  let day = new Date(dayForecast.Date).toString();\r\n  return (\r\n    <div className=\"daily-forecast-container\">\r\n      <article class=\"widget\">\r\n        <div class=\"weatherIcon\">\r\n          <img src={iconsServise.getWeatherIcon(dayForecast.Day.Icon)} alt=\"\" />\r\n        </div>\r\n        <div class=\"weatherInfo\">\r\n          <div class=\"temperature\">\r\n            {\" \"}\r\n            {celcius ? (\r\n              <span>\r\n                {celciusConverter(dayForecast.Temperature.Maximum.Value)}&deg;C\r\n              </span>\r\n            ) : (\r\n              <span>{dayForecast.Temperature.Maximum.Value}&deg;f</span>\r\n            )}\r\n          </div>\r\n          <div class=\"description\">\r\n            <div class=\"weatherCondition\">{dayForecast.Day.IconPhrase}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"date\">{day.substring(0, 3)}</div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { DayPreview } from \"./DayPreview\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport function DailyForecast({ dailyForecast }) {\r\n  if (!dailyForecast.length) return <div><Loader></Loader></div>;\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"daily-list\">\r\n        {dailyForecast.map((dayForecast) => {\r\n          return <DayPreview dayForecast={dayForecast} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const locationService = {\r\n    getCurrentPosition\r\n}\r\n\r\nfunction getCurrentPosition(success, err) {\r\n    navigator.geolocation.getCurrentPosition(success, err);\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CurrentWeather } from \"../cmps/CurrentWeather\";\r\nimport { DailyForecast } from \"../cmps/DailyForecast\";\r\nimport { WeatherService } from \"../services/WeatherService\";\r\nimport { locationService } from \"../services/locationService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport {\r\n  loadCurrentWeather,\r\n  loadDailyForecast,\r\n  setCurrentLocation,\r\n  toggleSnackBar,\r\n} from \"../store/action/weather.action\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nexport function WeatherApp() {\r\n  const {\r\n    currentWeather,\r\n    dailyForecast,\r\n    snackBarOpen,\r\n    errorMessege,\r\n    currentLocation,\r\n  } = useSelector((state) => state.weatherModule);\r\n  \r\n  useEffect(() => {\r\n    locationService.getCurrentPosition(success, err);\r\n  }, []);\r\n  \r\n  const dispatch = useDispatch();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(toggleSnackBar());\r\n  };\r\n  \r\n  const loadWeatherData =(coords) => {\r\n    if (Object.keys(currentLocation).length === 0) {\r\n      WeatherService.getKeyFromCords(coords)\r\n        .then((res) => {\r\n          dispatch(loadCurrentWeather(res.Key));\r\n          dispatch(loadDailyForecast(res.Key));\r\n          dispatch(setCurrentLocation(res));\r\n        })\r\n        .catch((err) => dispatch(toggleSnackBar(err)));\r\n    }\r\n  }\r\n  const success = (pos) => {\r\n    loadWeatherData(pos.coords)\r\n  };\r\n\r\n  const err = (err) => {\r\n    let telAviv = {\r\n      latitude: \"32.0853\",\r\n      longitude: \"34.7818\",\r\n    };\r\n    loadWeatherData(telAviv)\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top-container\">\r\n        <CurrentWeather currentWeather={currentWeather}></CurrentWeather>\r\n      </div>\r\n      <DailyForecast dailyForecast={dailyForecast}></DailyForecast>\r\n      <div>\r\n        <Snackbar\r\n          open={snackBarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n            {errorMessege}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Autocomplete, colors } from \"@mui/material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { WeatherService } from \"../services/WeatherService\";\r\nimport {\r\n  loadCurrentWeather,\r\n  loadDailyForecast,\r\n  setCurrentLocation,\r\n  toggleSnackBar,\r\n} from \"../store/action/weather.action\";\r\n\r\nexport function SearchLocation() {\r\n  const dispatch = useDispatch();\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const onSetCity = (_, startWith) => {\r\n    WeatherService.getLocations(startWith)\r\n      .then((locations) => setLocations(locations || []))\r\n      .catch((err) => dispatch(toggleSnackBar(err)));\r\n  };\r\n\r\n  const onSetKey = (_, location) => {\r\n    if (!location) return;\r\n    dispatch(loadCurrentWeather(location.Key));\r\n    dispatch(loadDailyForecast(location.Key));\r\n    dispatch(setCurrentLocation(location));\r\n  };\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <Autocomplete\r\n        disablePortal\r\n        id=\"combo-box-demo\"\r\n        onInputChange={onSetCity}\r\n        onChange={onSetKey}\r\n        options={locations}\r\n        getOptionLabel={(location) => location.LocalizedName}\r\n        renderInput={(params) => (\r\n          <TextField variant=\"outlined\" {...params} label=\"Search City...\" />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport {\r\n  toggleDarkMode,\r\n  toggleTemperature,\r\n} from \"../store/action/weather.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\nimport { SearchLocation } from \"./SearchLocation\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\n\r\nexport function Header() {\r\n  const dispatch = useDispatch();\r\n  const { darkMode, favoritesLocations, currentLocation ,celcius } = useSelector(\r\n    (state) => state.weatherModule\r\n  );\r\n\r\n  const setToggleDarkMode = () => {\r\n    dispatch(toggleDarkMode());\r\n  };\r\n\r\n  const setToggleTemperature = () => {\r\n    dispatch(toggleTemperature());\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <Link className=\"link-mobile\" to=\"/favorites\">\r\n        <MenuItem>\r\n          <IconButton\r\n            size=\"large\"\r\n            aria-label=\"show 4 new mails\"\r\n            color=\"inherit\"\r\n          >\r\n            <Badge badgeContent={favoritesLocations.length} color=\"error\">\r\n              <FavoriteBorderIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Favorites</p>\r\n        </MenuItem>\r\n      </Link>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          edge=\"end\"\r\n          aria-label=\"account of current user\"\r\n          aria-haspopup=\"true\"\r\n          onClick={setToggleDarkMode}\r\n          color=\"inherit\"\r\n        >\r\n          {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\r\n        </IconButton>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <Link className=\"link\" to=\"/\">\r\n                <HomeIcon />\r\n              </Link>\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n            >\r\n              Herolo WeatherApp\r\n            </Typography>\r\n            <Search>\r\n              <SearchLocation />\r\n            </Search>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n              >\r\n                {currentLocation.LocalizedName}\r\n              </Typography>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                  <Switch color=\"default\" onClick={setToggleTemperature}></Switch>\r\n                  <span className=\"temperature-sign\">{celcius ? 'C' : 'F'}</span>\r\n                \r\n              </IconButton>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-haspopup=\"true\"\r\n                onClick={setToggleDarkMode}\r\n                color=\"inherit\"\r\n              >\r\n                {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\r\n              </IconButton>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={favoritesLocations.length} color=\"error\">\r\n                  <Link className=\"link\" to=\"/favorites\">\r\n                    <FavoriteBorderIcon />\r\n                  </Link>\r\n                </Badge>\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show more\"\r\n                aria-controls={mobileMenuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMobileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMobileMenu}\r\n        {renderMenu}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"coffee-rights\">© 2021 Itay Rosental</div>\r\n        </div>\r\n    )\r\n}\r\n","import { WeatherApp } from \"./pages/WeatherApp\"\r\nimport { Favorites } from \"./pages/Favorites\"\r\n\r\nexport const routes = [\r\n    \r\n    {\r\n        path: '/',\r\n        component: WeatherApp\r\n    }, \r\n    {\r\n        path: '/favorites',\r\n        component: Favorites\r\n        \r\n    },  \r\n\r\n]","import React from \"react\";\r\nimport { Button, Card } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromFavorites, loadCurrentWeather, loadDailyForecast , setCurrentLocation} from \"../store/action/weather.action\";\r\nimport { iconsServise } from \"../services/IconsService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function Favorites() {\r\n  const dispatch = useDispatch();\r\n  const { favoritesLocations, celcius } = useSelector(\r\n    (state) => state.weatherModule\r\n  );\r\n  console.log(favoritesLocations);\r\n  const onRemoveFavorites = (locationKey) => {\r\n    dispatch(removeFromFavorites(locationKey));\r\n  };\r\n\r\n  const onClickFavorite = (location) => {\r\n    dispatch(loadCurrentWeather(location.Key));\r\n      dispatch(loadDailyForecast(location.Key));\r\n      dispatch(setCurrentLocation(location));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"favorties-header\">Favorites Cities!</h1>\r\n      <div className=\"favorites-container\">\r\n      <div className={favoritesLocations.length ? 'yes-favorites' : 'no-favorites'}>No Favorites Yet!</div>\r\n        {favoritesLocations.map((location) => (\r\n          <article class=\"widget-favorite \">\r\n            <Link to=\"/\" onClick={()=> onClickFavorite(location)} >\r\n          <div class=\"weatherIcon\"><img\r\n              src={iconsServise.getWeatherIcon(location.currentWeather[0].WeatherIcon)}\r\n              alt=\"\"\r\n            /></div>\r\n          <div class=\"weatherInfo\">\r\n            <div class=\"temperature\">{celcius ? <span>{location.currentWeather[0].Temperature.Metric.Value}&deg;</span> :  <span>{location.currentWeather[0].Temperature.Imperial.Value}&deg;</span>}</div>\r\n            <div class=\"description\">    \r\n              <div class=\"weatherCondition\">{location.currentWeather[0].WeatherText}</div>    \r\n              <div class=\"place\">{location.currentLocation.LocalizedName.substring(0, 8)}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"date\">{new Date(location.currentWeather[0].EpochTime).toString().substring(0,3)}</div>\r\n          </Link> \r\n              <Button className=\"remove-favorite\"\r\n              onClick={() => onRemoveFavorites(location.currentLocation.Key)}\r\n              color=\"info\"\r\n              variant=\"contained\"\r\n            >\r\n              Remove\r\n            </Button>\r\n        </article> \r\n        ))}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport './assets/style/main.scss'\nimport { WeatherApp } from './pages/WeatherApp';\nimport {Header} from './cmps/Header'\nimport { Footer } from './cmps/Footer';\nimport { routes } from './routes.js';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useSelector } from \"react-redux\";\nimport { CssBaseline } from '@mui/material';\n\nfunction App() {\n  const { darkMode } = useSelector(\n    (state) => state.weatherModule\n  );\n\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n      ...(darkMode) ? {main : '#ff0044', background : {default : '#132F4C' }} : {main : '#ff0044', background : {default : '#cfd8dc' }}\n\n    },\n  })\n\n  return (\n    <div  className=\"App\">\n      <Router>\n        <ThemeProvider theme={theme}>\n          <CssBaseline>\n          <Header/>\n          <Switch >\n            <div className=\"main-container\"> {routes.map(route => {\n              return <Route key={route.path} exact component={route.component} path={route.path} />\n            })}</div>\n          </Switch>\n          <Footer />\n          </CssBaseline>\n        </ThemeProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    currentWeather: {},\r\n    dailyForecast: {},\r\n    currentLocation: {},\r\n    favoritesLocations: [],\r\n    darkMode: false,\r\n    celcius : true,\r\n    snackBarOpen : false,\r\n    errorMessege : ''\r\n}\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURRENT_WEATHER':\r\n            return { ...state, currentWeather: action.currentWeather }\r\n        case 'SET_DAILY_FORECAST':\r\n            return { ...state, dailyForecast: action.dailyForecast }\r\n        case 'SET_LOCATION_FAVORITE':\r\n            if(state.favoritesLocations.findIndex(location => location.currentLocation.Key === action.favorite.currentLocation.Key) !== -1) return state \r\n            return { ...state, favoritesLocations: [...state.favoritesLocations, action.favorite] }\r\n        case 'SET_CURRENT_LOCATION':\r\n            return { ...state, currentLocation: action.currentLocation }\r\n        case 'TOGGLE_DARK_MODE':\r\n            return { ...state, darkMode: !state.darkMode }\r\n        case 'TOGGLE_TEMPERATURE':\r\n            return { ...state, celcius: !state.celcius }\r\n        case 'TOGGLE_SNACK_BAR':\r\n            return { ...state, snackBarOpen: !state.snackBarOpen, errorMessege: action.errorMessege  }\r\n        case 'REMOVE_LOCATION_FAVORITE':\r\n            return { ...state, favoritesLocations: state.favoritesLocations.filter(location => location.currentLocation.Key !== action.locationKey) }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { weatherReducer } from './reducer/weather.reducer';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    weatherModule : weatherReducer,\r\n})\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}